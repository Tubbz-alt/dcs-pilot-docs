---
title: Check passport validity
weight: 5
---

# Check passport validity

You can use the Document Checking Service (DCS) API to check if a passport is valid.

## Request

`POST: https://<DCS-URI>/checks/passport`

The `<DCS-URI>` will be supplied at a later date.

For example, this is the structure of the JSON object in a request body without the [signature and encryption wrapper][cryptography]:

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "550e8400-e29b-41d4-a716-446655440003",
  "timestamp": "1997-07-16T19:20:30.45+01:00",
  "clientId": "idpName",
  "passportNumber": "123456789",
  "surname": "Smith",
  "forenames": [
    "Bob",
    "Dave"
  ],
  "dateOfBirth": "1950-02-13",
  "expiryDate": "2020-01-01",
  "issuingCountryCode": "GBR"
}
```

All fields are required except for `issuingCountryCode`.

### correlationId
RFC 4122 compliant Universally Unique Identifier (UUID)          

### requestId            
RFC 4122 compliant Universally Unique IDentifier (UUID)          

### timestamp            
ISO 8601 compliant date and time                                    

### clientId             
String less than 50 characters issued by the DCS team team              

### passportNumber       
Integer between 1 and 899999999                                    

### surname              
Maximum length 30. Contains only the characters `A`-`Z` and `.'’-`         

### forenames            
A list of maximum 30 forenames containing only the characters `A`-`Z` and `.'’-`   

### dateOfBirth          
Valid date in the format YYYY-MM-DD                                     

### expiryDate           
Valid date in the format YYYY-MM-DD. Must be in the future.            

### issuingCountryCode   
ISO 3166-1 alpha-3 code with modifications                            

## Response

A successful request is one that completes without error, regardless of whether the passport is valid or not.

If the request was successful, the unwrapped response object will look like:

#### Successful response 
```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": false,
  "valid": true
}
```

#### Failure response

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": false,
  "valid": false
}
```

#### Error response

```json
{
  "correlationId": "550e8400-e29b-41d4-a716-446655440000",
  "requestId": "af47ddc1-faa9-42fe-be1f-8131df114713",
  "error": true,
  "errorMessage": [
    "Unplanned outage"
  ]
}
```

### Response Fields

#### correlationId
String, RFC 4122 compliant UUID. The correlation ID from the original request

#### requestId
String, RFC 4122 compliant UUID. The request ID from the original request.

#### error
Boolean. Indicates whether there was an error when checking the passport data.

#### valid
Boolean. Whether the passport is valid or not. This field is not included if there is an error.

#### errorMessage
List of Strings. A description of the error. This field is non-empty only if there was an upstream error from HMPO.

<%= partial "partials/links" %>
